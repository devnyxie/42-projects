CC = gcc
# complile the library first
CFLAGS = -Wall -Wextra -Werror -I$(LIBFT_DIR)
# dir name
LIBFT_DIR = libft
# path to the compiled lib
LIBFT = $(LIBFT_DIR)/libft.a
# source files
SRC = ft_printf.c \
	  helpers.c \
	  handlers.c \
	  $(LIBFT_DIR)/ft_atoi.c \
	  $(LIBFT_DIR)/ft_bzero.c \
	  $(LIBFT_DIR)/ft_calloc.c \
	  $(LIBFT_DIR)/ft_isalnum.c \
	  $(LIBFT_DIR)/ft_isalpha.c \
	  $(LIBFT_DIR)/ft_isascii.c \
	  $(LIBFT_DIR)/ft_isdigit.c \
	  $(LIBFT_DIR)/ft_isprint.c \
	  $(LIBFT_DIR)/ft_itoa.c \
	  $(LIBFT_DIR)/ft_memchr.c \
	  $(LIBFT_DIR)/ft_memcmp.c \
	  $(LIBFT_DIR)/ft_memcpy.c \
	  $(LIBFT_DIR)/ft_memmove.c \
	  $(LIBFT_DIR)/ft_memset.c \
	  $(LIBFT_DIR)/ft_putchar_fd.c \
	  $(LIBFT_DIR)/ft_putendl_fd.c \
	  $(LIBFT_DIR)/ft_putnbr_fd.c \
	  $(LIBFT_DIR)/ft_putstr_fd.c \
	  $(LIBFT_DIR)/ft_split.c \
	  $(LIBFT_DIR)/ft_strchr.c \
	  $(LIBFT_DIR)/ft_strdup.c \
	  $(LIBFT_DIR)/ft_striteri.c \
	  $(LIBFT_DIR)/ft_strjoin.c \
	  $(LIBFT_DIR)/ft_strlcat.c \
	  $(LIBFT_DIR)/ft_strlcpy.c \
	  $(LIBFT_DIR)/ft_strlen.c \
	  $(LIBFT_DIR)/ft_strmapi.c \
	  $(LIBFT_DIR)/ft_strncmp.c \
	  $(LIBFT_DIR)/ft_strnstr.c \
	  $(LIBFT_DIR)/ft_strrchr.c \
	  $(LIBFT_DIR)/ft_strtrim.c \
	  $(LIBFT_DIR)/ft_substr.c

# object files (compiled source files)
OBJ = $(SRC:.c=.o)
# the name of the final library archive
NAME = libftprintf.a

# default target
all: $(NAME)

# 1. copy the libft.a to the current directory
# 2. add the object files to the archive using ar
$(NAME): $(OBJ) $(LIBFT)
	cp $(LIBFT) $(NAME)
	ar rcs $(NAME) $(OBJ)

# compile the library
$(LIBFT):
	make -C $(LIBFT_DIR)

# compile the source files
%.o: %.c ft_printf.h
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -f $(OBJ)
	make clean -C $(LIBFT_DIR)

fclean: clean
	rm -f $(NAME)
	make fclean -C $(LIBFT_DIR)

re: fclean all

.PHONY: all clean fclean re